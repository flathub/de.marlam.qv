app-id: de.marlam.qv
runtime: org.kde.Platform
runtime-version: '6.4'
sdk: org.kde.Sdk
command: qv
finish-args:
  # X11 + XShm access
  - --share=ipc
  - --socket=fallback-x11
  # Wayland access
  - --socket=wayland
  # OpenGL rendering
  - --device=dri
  # Read any scientific data file (mostly stored outside the xdg hierarchy)
  # and save a visualization alongside it
  - --filesystem=host
cleanup:
  # '/bin/[a-p]*' does not work, so list explicitly
  - '/bin/M*'
  - '/bin/a*'
  - '/bin/c*'
  - '/bin/d*'
  - '/bin/e*'
  - '/bin/g*'
  - '/bin/h*'
  - '/bin/i*'
  - '/bin/j*'
  - '/bin/m*'
  - '/bin/n*'
  - '/bin/o*'
  - '/bin/p*'
  - '/bin/r*'
  - '/bin/s*'
  - '/bin/t*'
  - '/bin/x*'
  - '/include'
  - '/lib/cfitsio*'
  - '/lib/cmake'
  - '/lib/pkgconfig'
  - '/lib/python*'
  - '/lib/*.a'
  - '/share/COPYING'
  - '/share/RELEASE.txt'
  - '/share/USING_HDF5_CMake.txt'
  - '/share/bash-completion'
  - '/share/cmake'
  - '/share/doc'
  - '/share/man'
modules:
  # Exiv2: used by libtgd to read png and jpeg metadata
  - name: exiv2
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/Exiv2/exiv2/releases/download/v0.27.5/exiv2-0.27.5-Source.tar.gz
        sha256: 35a58618ab236a901ca4928b0ad8b31007ebdc0386d904409d825024e45ea6e2
  # Dcmtk: used by libtgd to read DICOM medical image data
  - name: dcmtk
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_APPS=OFF
      - -DBUILD_SHARED_LIBS=ON
    sources:
      - type: archive
        url: https://dicom.offis.de/download/dcmtk/dcmtk367/dcmtk-3.6.7.tar.gz
        sha256: 7c58298e3e8d60232ee6fc8408cfadd14463cc11a3c4ca4c59af5988c7e9710a
  # Imath: prerequisite for OpenEXR
  - name: Imath
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/AcademySoftwareFoundation/Imath/archive/refs/tags/v3.1.6.tar.gz
        sha256: ea5592230f5ab917bea3ceab266cf38eb4aa4a523078d46eac0f5a89c52304db
  # OpenEXR: used by libtgd to read EXR image data
  - name: OpenEXR
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/AcademySoftwareFoundation/openexr/archive/refs/tags/v3.1.5.tar.gz
        sha256: 93925805c1fc4f8162b35f0ae109c4a75344e6decae5a240afdfce25f8a433ec
  # cfitsio: used by libtgd to read FITS astronomy data
  - name: cfitsio
    buildsystem: cmake-ninja
    builddir: true
    sources:
      - type: archive
        url: http://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.2.0.tar.gz
        sha256: eba53d1b3f6e345632bb09a7b752ec7ced3d63ec5153a848380f3880c5d61889
  # poppler: used by libtgd to read PDFs
  - name: poppler
    buildsystem: cmake-ninja
    config-opts:
      - -DENABLE_BOOST=OFF
      - -DENABLE_GLIB=OFF
      - -DENABLE_GOBJECT_INTROSPECTION=OFF
      - -DENABLE_QT5=OFF
      - -DENABLE_QT6=OFF
      - -DENABLE_LIBOPENJPEG=none
      - -DENABLE_CMS=none
      - -DENABLE_LIBCURL=OFF
    sources:
      - type: archive
        url: https://poppler.freedesktop.org/poppler-22.11.0.tar.xz
        sha256: 093ba9844ed774285517361c15e21a31ba4df278a499263d4403cca74f2da828
  # pfstools: libpfs is used by libtgd to read PFS image data
  - name: pfstools
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://altushost-swe.dl.sourceforge.net/project/pfstools/pfstools/2.2.0/pfstools-2.2.0.tgz
        sha256: 9bf6844985663226c21998eeb43c261acb8e4b3891b9a91b729554406289d7ca
  # hdf5: used by libtgd to read HDF5 data files
  - name: hdf5
    buildsystem: cmake-ninja
    builddir: true
    sources:
      - type: archive
        url: https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/hdf5-1.12.1.tar.bz2
        sha256: aaf9f532b3eda83d3d3adc9f8b40a9b763152218fa45349c3bc77502ca1f8f1c
  # matio: used by libtgd to read Matlab .mat files
  - name: matio
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/tbeu/matio/releases/download/v1.5.23/matio-1.5.23.tar.gz
        sha256: 9f91eae661df46ea53c311a1b2dcff72051095b023c612d7cbfc09406c9f4d6e
  # ImageMagick: used by libtgd to read a few exotic file formats that don't have their own importer
  - name: ImageMagick
    buildsystem: autotools
    sources:
      - type: archive
        url: https://github.com/ImageMagick/ImageMagick/archive/refs/tags/7.1.0-52.tar.gz
        sha256: bacd6d63f16482f269bf5cfe76d34b9a2b01ec737e9cb41fd2612d37f34698fc
  # PROJ: prerequisite for GDAL
  - name: PROJ
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_TESTING=OFF
    sources:
      - type: archive
        url: https://download.osgeo.org/proj/proj-9.1.0.tar.gz
        sha256: 81b2239b94cad0886222cde4f53cb49d34905aad2a1317244a0c30a553db2315
  # GDAL: used by libtgd to read all sorts of Remote Sensing image data
  - name: GDAL
    buildsystem: cmake-ninja
    config-opts:
      - -DACCEPT_MISSING_SQLITE3_RTREE:BOOL=ON
      - -DGDAL_USE_POPPLER=OFF
    sources:
      - type: archive
        url: https://github.com/OSGeo/gdal/releases/download/v3.6.0/gdal-3.6.0.tar.gz
        sha256: 0d6a79eec0c6afb97c7172e429ec05c9d15d3917987ad686a914b292c83531db
  # tgd: used by qv to read images and data files in almost any format, and manage the data in memory
  - name: tgd
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://marlam.de/tgd/releases/tgd-4.2.tar.gz
        sha256: 147940dcc75aaa795431751b74826a826b65ff8c1e6d173e6d9a0c53c726d6e3
  # finally, qv.
  - name: qv
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://marlam.de/qv/releases/qv-5.1.tar.gz
        sha256: 0cc57860d4c64d680cb85daebdb72362855f95cf43fbe466ad5e77e6338ffd70
